version: '3.8'

services:
  productivitykeeperweb:
    build:
      context: ./ProductivityKeeperWeb
      dockerfile: Dockerfile
    restart: always
    ports:
      - '65070:80'
      - '44398:443'
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORTS": 44398
      ASPNETCORE_HTTP_PORTS": 65070
      ASPNETCORE_Kestrel__Certificates__Default__Password: kitce
      ASPNETCORE_Kestrel__Certificates__Default__Path: ./ProductivityKeeperWeb/aspnetapp.pfx
    command: ["dotnet", "ProductivityKeeperWeb.dll"]
    volumes:
      - ./ProductivityKeeperWeb:/app/ProductivityKeeperWeb

  # productivitykeeperclient:
  #   build:
  #     context: ./ProductivityKeeperClient
  #     dockerfile: Dockerfile  # Assuming the Dockerfile is in the frontend project directory
  #   ports:
  #     - '4201:4201'
  #   environment:
  #     NODE_ENV: "production"
  #   volumes:
  #     - ./ProductivityKeeperClient:/app/ProductivityKeeperClient 

  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - '44398:443'  # Expose port 44398 for HTTPS traffic
  #   environment:
  #     DOMAINS: 'example.com => https://localhost'
  #     PROXY_UPSTREAM_NAME: 'productivitykeeperweb'
  #     PROXY_UPSTREAM_PORT: '65070'
  #   volumes:
  #     - /etc/ssl:/etc/ssl
  #     - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./key.pem:/root/ssl/key.pem
      - ./cert.pem:/root/ssl/cert.pem
      - ./ssl:/etc/nginx/ssl
    ports:
      - "443:443"
    depends_on:
      - productivitykeeperweb